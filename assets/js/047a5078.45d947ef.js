"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[8566],{9399:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var n=s(7462),o=(s(7294),s(3905));s(1839);const i={},r="loadPdfJs",d={unversionedId:"reference/typescript/functions/loadPdfJs",id:"reference/typescript/functions/loadPdfJs",title:"loadPdfJs",description:"Load PDF.js and return a promise to the global pdfjsLib object.",source:"@site/docs/reference/typescript/functions/loadPdfJs.md",sourceDirName:"reference/typescript/functions",slug:"/reference/typescript/functions/loadPdfJs",permalink:"/obsidian-plugin-docs/reference/typescript/functions/loadPdfJs",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/reference/typescript/functions/loadPdfJs.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"loadMermaid",permalink:"/obsidian-plugin-docs/reference/typescript/functions/loadMermaid"},next:{title:"loadPrism",permalink:"/obsidian-plugin-docs/reference/typescript/functions/loadPrism"}},a={},c=[],p={toc:c};function l(e){let{components:t,...s}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"loadpdfjs"},"loadPdfJs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export function loadPdfJs(): Promise<any>;\n")),(0,o.kt)("p",null,"Load PDF.js and return a promise to the global pdfjsLib object.\nCan also use ",(0,o.kt)("inlineCode",{parentName:"p"},"window.pdfjsLib")," after this promise resolves to get the same reference."))}l.isMDXComponent=!0}}]);