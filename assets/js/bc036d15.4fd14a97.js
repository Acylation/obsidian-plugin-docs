"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[6823],{8431:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));a(1839);const i={},s="Node",o={unversionedId:"reference/typescript/interfaces/Node",id:"reference/typescript/interfaces/Node",title:"Node",description:"Node is an interface from which a number of DOM API object types inherit. It allows those types to be treated similarly; for example, inheriting the same set of methods, or being tested in the same way.",source:"@site/docs/reference/typescript/interfaces/Node.md",sourceDirName:"reference/typescript/interfaces",slug:"/reference/typescript/interfaces/Node",permalink:"/obsidian-plugin-docs/reference/typescript/interfaces/Node",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/reference/typescript/interfaces/Node.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"MenuPositionDef",permalink:"/obsidian-plugin-docs/reference/typescript/interfaces/MenuPositionDef"},next:{title:"NumberConstructor",permalink:"/obsidian-plugin-docs/reference/typescript/interfaces/NumberConstructor"}},l={},c=[{value:"Methods",id:"methods",level:2},{value:"createEl",id:"createel",level:3},{value:"createDiv",id:"creatediv",level:3},{value:"createSpan",id:"createspan",level:3},{value:"createSvg",id:"createsvg",level:3}],d={toc:c};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"node"},"Node"),(0,n.kt)("p",null,"Node is an interface from which a number of DOM API object types inherit. It allows those types to be treated similarly; for example, inheriting the same set of methods, or being tested in the same way."),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"createel"},"createEl"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'createEl: <K extends "object" | "a" | "abbr" | "address" | "applet" | "area" | "article" | "aside" | "audio" | "b" | "base" | "basefont" | "bdi" | "bdo" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 99 more ... | "wbr">(tag: K, o?: string | DomElementInfo, callback?: (el: HTMLElementTagNameMap[K]) => void) => HTM...\n')),(0,n.kt)("p",null,"Create an element and append it to this node."),(0,n.kt)("h3",{id:"creatediv"},"createDiv"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"createDiv: (o?: string | DomElementInfo, callback?: (el: HTMLDivElement) => void) => HTMLDivElement\n")),(0,n.kt)("h3",{id:"createspan"},"createSpan"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"createSpan: (o?: string | DomElementInfo, callback?: (el: HTMLSpanElement) => void) => HTMLSpanElement\n")),(0,n.kt)("h3",{id:"createsvg"},"createSvg"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'createSvg: <K extends "symbol" | "a" | "script" | "style" | "title" | "circle" | "clipPath" | "defs" | "desc" | "ellipse" | "feBlend" | "feColorMatrix" | "feComponentTransfer" | "feComposite" | "feConvolveMatrix" | ... 41 more ... | "view">(tag: K, o?: string | SvgElementInfo, callback?: (el: SVGElementTagNameMap[K]) => void) ...\n')))}p.isMDXComponent=!0}}]);