"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[7701],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var i=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=i.createContext({}),d=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=d(e.components);return i.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,g=u["".concat(c,".").concat(m)]||u[m]||p[m]||r;return n?i.createElement(g,a(a({ref:t},l),{},{components:n})):i.createElement(g,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var d=2;d<r;d++)a[d]=n[d];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},18565:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var i=n(83117),o=(n(67294),n(3905));const r={sidebar_position:40},a="Communicating with editor extensions",s={unversionedId:"concepts/editor-extensions/communicating-with-editor-extensions",id:"concepts/editor-extensions/communicating-with-editor-extensions",title:"Communicating with editor extensions",description:"Once you've built your editor extension, you might want to communicate with it from outside the editor. For example, through a Command, or a Ribbon action.",source:"@site/docs/concepts/editor-extensions/communicating-with-editor-extensions.md",sourceDirName:"concepts/editor-extensions",slug:"/concepts/editor-extensions/communicating-with-editor-extensions",permalink:"/obsidian-plugin-docs/concepts/editor-extensions/communicating-with-editor-extensions",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/concepts/editor-extensions/communicating-with-editor-extensions.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"docs",previous:{title:"State fields",permalink:"/obsidian-plugin-docs/concepts/editor-extensions/state-fields"},next:{title:"Vault",permalink:"/obsidian-plugin-docs/concepts/vault"}},c={},d=[{value:"View plugin",id:"view-plugin",level:2},{value:"State field",id:"state-field",level:2}],l={toc:d};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,i.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"communicating-with-editor-extensions"},"Communicating with editor extensions"),(0,o.kt)("p",null,"Once you've built your editor extension, you might want to communicate with it from outside the editor. For example, through a ",(0,o.kt)("a",{parentName:"p",href:"/obsidian-plugin-docs/guides/commands"},"Command"),", or a ",(0,o.kt)("a",{parentName:"p",href:"/obsidian-plugin-docs/guides/ribbon-actions"},"Ribbon action"),"."),(0,o.kt)("p",null,"You can access the CodeMirror 6 editor from a ",(0,o.kt)("a",{parentName:"p",href:"/obsidian-plugin-docs/api/classes/MarkdownView"},"MarkdownView"),". However, since the Obsidian API doesn't actually expose the editor, you need to tell TypeScript to trust that it's there, using ",(0,o.kt)("inlineCode",{parentName:"p"},"@ts-expect-error"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// @ts-expect-error, not typed\nconst editorView = view.editor.cm as EditorView;\n")),(0,o.kt)("h2",{id:"view-plugin"},"View plugin"),(0,o.kt)("p",null,"You can access the view plugin instance from the ",(0,o.kt)("inlineCode",{parentName:"p"},"EditorView.plugin()")," method."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="main.ts" {8-11}',title:'"main.ts"',"{8-11}":!0},'this.addCommand({\n  id: "example-editor-command",\n  name: "Example editor command",\n  editorCallback: (editor, view) => {\n    // @ts-expect-error, not typed\n    const editorView = view.editor.cm as EditorView;\n\n    const plugin = editorView.plugin(examplePlugin);\n    if (plugin) {\n      plugin.addPointerToSelection(editorView);\n    }\n  },\n});\n')),(0,o.kt)("h2",{id:"state-field"},"State field"),(0,o.kt)("p",null,"You can dispatch changes and ",(0,o.kt)("a",{parentName:"p",href:"/obsidian-plugin-docs/concepts/editor-extensions/state-fields#dispatching-state-effects"},"state effects")," directly on the editor view."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="main.ts" {8}',title:'"main.ts"',"{8}":!0},'this.addCommand({\n  id: "example-editor-command",\n  name: "Example editor command",\n  editorCallback: (editor, view) => {\n    // @ts-expect-error, not typed\n    const editorView = view.editor.cm as EditorView;\n\n    editorView.dispatch({\n      effects: [\n        // ...\n      ]\n    })\n  },\n});\n')))}p.isMDXComponent=!0}}]);