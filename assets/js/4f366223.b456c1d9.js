"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[7235],{5920:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>n,metadata:()=>i,toc:()=>d});var o=s(7462),t=(s(7294),s(3905));s(1839);const n={},c="MarkdownPreviewRenderer",i={unversionedId:"reference/typescript/classes/MarkdownPreviewRenderer",id:"reference/typescript/classes/MarkdownPreviewRenderer",title:"MarkdownPreviewRenderer",description:"Constructor",source:"@site/docs/reference/typescript/classes/MarkdownPreviewRenderer.md",sourceDirName:"reference/typescript/classes",slug:"/reference/typescript/classes/MarkdownPreviewRenderer",permalink:"/obsidian-plugin-docs/reference/typescript/classes/MarkdownPreviewRenderer",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/reference/typescript/classes/MarkdownPreviewRenderer.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"MarkdownEditView",permalink:"/obsidian-plugin-docs/reference/typescript/classes/MarkdownEditView"},next:{title:"MarkdownPreviewView",permalink:"/obsidian-plugin-docs/reference/typescript/classes/MarkdownPreviewView"}},a={},d=[{value:"Constructor",id:"constructor",level:2},{value:"Methods",id:"methods",level:2},{value:"registerPostProcessor",id:"registerpostprocessor",level:3},{value:"unregisterPostProcessor",id:"unregisterpostprocessor",level:3},{value:"createCodeBlockPostProcessor",id:"createcodeblockpostprocessor",level:3}],l={toc:d};function p(e){let{components:r,...s}=e;return(0,t.kt)("wrapper",(0,o.Z)({},l,s,{components:r,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"markdownpreviewrenderer"},"MarkdownPreviewRenderer"),(0,t.kt)("h2",{id:"constructor"},"Constructor"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-ts"},"constructor();\n")),(0,t.kt)("h2",{id:"methods"},"Methods"),(0,t.kt)("h3",{id:"registerpostprocessor"},"registerPostProcessor"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-ts"},"static registerPostProcessor(postProcessor: MarkdownPostProcessor, sortOrder?: number): void;\n")),(0,t.kt)("h3",{id:"unregisterpostprocessor"},"unregisterPostProcessor"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-ts"},"static unregisterPostProcessor(postProcessor: MarkdownPostProcessor): void;\n")),(0,t.kt)("h3",{id:"createcodeblockpostprocessor"},"createCodeBlockPostProcessor"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-ts"},"static createCodeBlockPostProcessor(language: string, handler: (source: string, el: HTMLElement, ctx: MarkdownPostProcessorContext) => Promise<any> | void): (el: HTMLElement, ctx: MarkdownPostProcessorContext) => void;\n")))}p.isMDXComponent=!0}}]);