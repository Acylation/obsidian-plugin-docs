"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[3838],{6897:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));n(1839);const s={},o="Document",a={unversionedId:"reference/typescript/interfaces/Document",id:"reference/typescript/interfaces/Document",title:"Document",description:"Any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.",source:"@site/docs/reference/typescript/interfaces/Document.md",sourceDirName:"reference/typescript/interfaces",slug:"/reference/typescript/interfaces/Document",permalink:"/obsidian-plugin-docs/reference/typescript/interfaces/Document",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/reference/typescript/interfaces/Document.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Debouncer",permalink:"/obsidian-plugin-docs/reference/typescript/interfaces/Debouncer"},next:{title:"DocumentFragment",permalink:"/obsidian-plugin-docs/reference/typescript/interfaces/DocumentFragment"}},c={},l=[{value:"Properties",id:"properties",level:2},{value:"_EVENTS",id:"_events",level:3},{value:"Methods",id:"methods",level:2},{value:"on",id:"on",level:3},{value:"off",id:"off",level:3}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"document"},"Document"),(0,i.kt)("p",null,"Any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree."),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"_events"},"_EVENTS"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"_EVENTS: { fullscreenchange?: EventListenerInfo[]; fullscreenerror?: EventListenerInfo[]; pointerlockchange?: EventListenerInfo[]; pointerlockerror?: EventListenerInfo[]; ... 91 more ...; paste?: EventListenerInfo[]; }\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"on"},"on"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'on: <K extends "input" | "progress" | "select" | "fullscreenchange" | "fullscreenerror" | "abort" | "animationcancel" | "animationend" | "animationiteration" | "animationstart" | "auxclick" | ... 84 more ... | "visibilitychange">(this: Document, type: K, selector: string, listener: (this: Document, ev: DocumentEventMap[...\n')),(0,i.kt)("h3",{id:"off"},"off"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'off: <K extends "input" | "progress" | "select" | "fullscreenchange" | "fullscreenerror" | "abort" | "animationcancel" | "animationend" | "animationiteration" | "animationstart" | "auxclick" | ... 84 more ... | "visibilitychange">(this: Document, type: K, selector: string, listener: (this: Document, ev: DocumentEventMap[...\n')))}u.isMDXComponent=!0}}]);