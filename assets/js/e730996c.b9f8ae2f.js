"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[8155],{5568:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var n=s(7462),i=(s(7294),s(3905));s(1839);const r={},c="ItemView",o={unversionedId:"reference/typescript/classes/ItemView",id:"reference/typescript/classes/ItemView",title:"ItemView",description:"Extends View",source:"@site/docs/reference/typescript/classes/ItemView.md",sourceDirName:"reference/typescript/classes",slug:"/reference/typescript/classes/ItemView",permalink:"/obsidian-plugin-docs/reference/typescript/classes/ItemView",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/reference/typescript/classes/ItemView.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"HoverPopover",permalink:"/obsidian-plugin-docs/reference/typescript/classes/HoverPopover"},next:{title:"Keymap",permalink:"/obsidian-plugin-docs/reference/typescript/classes/Keymap"}},a={},l=[{value:"Constructor",id:"constructor",level:2},{value:"Properties",id:"properties",level:2},{value:"contentEl",id:"contentel",level:3},{value:"Methods",id:"methods",level:2},{value:"addAction",id:"addaction",level:3}],p={toc:l};function d(e){let{components:t,...s}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"itemview"},"ItemView"),(0,i.kt)("p",null,"Extends ",(0,i.kt)("inlineCode",{parentName:"p"},"View")),(0,i.kt)("h2",{id:"constructor"},"Constructor"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"constructor(leaf: WorkspaceLeaf);\n")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"contentel"},"contentEl"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"contentEl: HTMLElement\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"addaction"},"addAction"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"addAction(icon: IconName, title: string, callback: (evt: MouseEvent) => any): HTMLElement;\n")))}d.isMDXComponent=!0}}]);