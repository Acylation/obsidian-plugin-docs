"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[436],{9541:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var s=n(7462),t=(n(7294),n(3905));n(1839);const a={},o="Submission guidelines",l={unversionedId:"publishing/submission-guidelines",id:"publishing/submission-guidelines",title:"Submission guidelines",description:"This page lists common review comments plugin authors get when submitting their plugin.",source:"@site/docs/publishing/submission-guidelines.md",sourceDirName:"publishing",slug:"/publishing/submission-guidelines",permalink:"/obsidian-plugin-docs/publishing/submission-guidelines",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/publishing/submission-guidelines.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Release your plugin with GitHub Actions",permalink:"/obsidian-plugin-docs/publishing/release-your-plugin-with-github-actions"},next:{title:"Overview",permalink:"/obsidian-plugin-docs/reference/typescript/"}},r={},u=[{value:"Use <code>normalizePath()</code> to clean up user-defined paths",id:"use-normalizepath-to-clean-up-user-defined-paths",level:2}],p={toc:u};function d(e){let{components:i,...n}=e;return(0,t.kt)("wrapper",(0,s.Z)({},p,n,{components:i,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"submission-guidelines"},"Submission guidelines"),(0,t.kt)("p",null,"This page lists common review comments plugin authors get when submitting their plugin."),(0,t.kt)("h2",{id:"use-normalizepath-to-clean-up-user-defined-paths"},"Use ",(0,t.kt)("inlineCode",{parentName:"h2"},"normalizePath()")," to clean up user-defined paths"),(0,t.kt)("p",null,"Use ",(0,t.kt)("a",{parentName:"p",href:"../reference/typescript/functions/normalizePath"},(0,t.kt)("inlineCode",{parentName:"a"},"normalizePath()"))," whenever you accept user-defined paths to files or folders in the vault, or when you construct your own paths in the plugin code."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"normalizePath()")," takes a path and scrubs it to be safe for the file system and for cross-platform use. This function:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Cleans up the use of forward and backward slashes, such as replacing 1 or more of ",(0,t.kt)("inlineCode",{parentName:"li"},"\\")," or ",(0,t.kt)("inlineCode",{parentName:"li"},"/")," with a single ",(0,t.kt)("inlineCode",{parentName:"li"},"/"),"."),(0,t.kt)("li",{parentName:"ul"},"Removes leading and trailing forward and backward slashes."),(0,t.kt)("li",{parentName:"ul"},"Replaces any non-breaking spaces, ",(0,t.kt)("inlineCode",{parentName:"li"},"\\u00A0"),", with a regular space."),(0,t.kt)("li",{parentName:"ul"},"Runs the path through ",(0,t.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize"},"String.prototype.normalize"),".")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-ts"},'import { normalizePath } from "obsidian";\nconst pathToPlugin = normalizePath(app.vault.configDir + "//plugins/my-plugin");\n// pathToPlugin contains ".obsidian/plugins/my-plugin" not .obsidian//plugins/my-plugin\n')))}d.isMDXComponent=!0}}]);