"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[5589],{1079:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=n(7462),s=(n(7294),n(3905));n(1839);const i={},a="String",o={unversionedId:"reference/typescript/interfaces/String",id:"reference/typescript/interfaces/String",title:"String",description:"Allows manipulation and formatting of text strings and determination and location of substrings within strings.",source:"@site/docs/reference/typescript/interfaces/String.md",sourceDirName:"reference/typescript/interfaces",slug:"/reference/typescript/interfaces/String",permalink:"/obsidian-plugin-docs/reference/typescript/interfaces/String",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/reference/typescript/interfaces/String.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Stat",permalink:"/obsidian-plugin-docs/reference/typescript/interfaces/Stat"},next:{title:"StringConstructor",permalink:"/obsidian-plugin-docs/reference/typescript/interfaces/StringConstructor"}},c={},l=[{value:"Methods",id:"methods",level:2},{value:"contains",id:"contains",level:3},{value:"startsWith",id:"startswith",level:3},{value:"endsWith",id:"endswith",level:3},{value:"format",id:"format",level:3}],d={toc:l};function g(t){let{components:e,...n}=t;return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"string"},"String"),(0,s.kt)("p",null,"Allows manipulation and formatting of text strings and determination and location of substrings within strings."),(0,s.kt)("h2",{id:"methods"},"Methods"),(0,s.kt)("h3",{id:"contains"},"contains"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"contains: (target: string) => boolean\n")),(0,s.kt)("h3",{id:"startswith"},"startsWith"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"startsWith: { (searchString: string, position?: number): boolean; (searchString: string, position?: number): boolean; }\n")),(0,s.kt)("p",null,"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nposition. Otherwise returns false."),(0,s.kt)("h3",{id:"endswith"},"endsWith"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"endsWith: { (searchString: string, endPosition?: number): boolean; (target: string, length?: number): boolean; }\n")),(0,s.kt)("p",null,"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nendPosition \u2013 length(this). Otherwise returns false."),(0,s.kt)("h3",{id:"format"},"format"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"format: (...args: string[]) => string\n")))}g.isMDXComponent=!0}}]);