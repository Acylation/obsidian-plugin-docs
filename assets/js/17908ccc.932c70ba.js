"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[3858],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),d=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=d(e.components);return r.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(a),u=n,g=c["".concat(o,".").concat(u)]||c[u]||m[u]||l;return a?r.createElement(g,i(i({ref:t},p),{},{components:a})):r.createElement(g,i({ref:t},p))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var d=2;d<l;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},81811:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var r=a(83117),n=(a(67294),a(3905));const l={},i="FileSystemAdapter",s={unversionedId:"api/classes/FileSystemAdapter",id:"api/classes/FileSystemAdapter",title:"FileSystemAdapter",description:"Implements DataAdapter",source:"@site/docs/api/classes/FileSystemAdapter.md",sourceDirName:"api/classes",slug:"/api/classes/FileSystemAdapter",permalink:"/obsidian-plugin-docs/api/classes/FileSystemAdapter",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/api/classes/FileSystemAdapter.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"FileManager",permalink:"/obsidian-plugin-docs/api/classes/FileManager"},next:{title:"FileView",permalink:"/obsidian-plugin-docs/api/classes/FileView"}},o={},d=[{value:"Constructor",id:"constructor",level:2},{value:"Methods",id:"methods",level:2},{value:"getName",id:"getname",level:3},{value:"getBasePath",id:"getbasepath",level:3},{value:"mkdir",id:"mkdir",level:3},{value:"trashSystem",id:"trashsystem",level:3},{value:"trashLocal",id:"trashlocal",level:3},{value:"rmdir",id:"rmdir",level:3},{value:"read",id:"read",level:3},{value:"readBinary",id:"readbinary",level:3},{value:"write",id:"write",level:3},{value:"writeBinary",id:"writebinary",level:3},{value:"append",id:"append",level:3},{value:"getResourcePath",id:"getresourcepath",level:3},{value:"getFilePath",id:"getfilepath",level:3},{value:"remove",id:"remove",level:3},{value:"rename",id:"rename",level:3},{value:"copy",id:"copy",level:3},{value:"exists",id:"exists",level:3},{value:"stat",id:"stat",level:3},{value:"list",id:"list",level:3},{value:"getFullPath",id:"getfullpath",level:3},{value:"readLocalFile",id:"readlocalfile",level:3},{value:"mkdir",id:"mkdir-1",level:3}],p={toc:d};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"filesystemadapter"},"FileSystemAdapter"),(0,n.kt)("p",null,"Implements ",(0,n.kt)("inlineCode",{parentName:"p"},"DataAdapter")),(0,n.kt)("h2",{id:"constructor"},"Constructor"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"constructor();\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"getname"},"getName"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getName(): string;\n")),(0,n.kt)("h3",{id:"getbasepath"},"getBasePath"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getBasePath(): string;\n")),(0,n.kt)("h3",{id:"mkdir"},"mkdir"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"mkdir(normalizedPath: string): Promise<void>;\n")),(0,n.kt)("h3",{id:"trashsystem"},"trashSystem"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"trashSystem(normalizedPath: string): Promise<boolean>;\n")),(0,n.kt)("h3",{id:"trashlocal"},"trashLocal"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"trashLocal(normalizedPath: string): Promise<void>;\n")),(0,n.kt)("h3",{id:"rmdir"},"rmdir"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"rmdir(normalizedPath: string, recursive: boolean): Promise<void>;\n")),(0,n.kt)("h3",{id:"read"},"read"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"read(normalizedPath: string): Promise<string>;\n")),(0,n.kt)("h3",{id:"readbinary"},"readBinary"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"readBinary(normalizedPath: string): Promise<ArrayBuffer>;\n")),(0,n.kt)("h3",{id:"write"},"write"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"write(normalizedPath: string, data: string, options?: DataWriteOptions): Promise<void>;\n")),(0,n.kt)("h3",{id:"writebinary"},"writeBinary"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"writeBinary(normalizedPath: string, data: ArrayBuffer, options?: DataWriteOptions): Promise<void>;\n")),(0,n.kt)("h3",{id:"append"},"append"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"append(normalizedPath: string, data: string, options?: DataWriteOptions): Promise<void>;\n")),(0,n.kt)("h3",{id:"getresourcepath"},"getResourcePath"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getResourcePath(normalizedPath: string): string;\n")),(0,n.kt)("h3",{id:"getfilepath"},"getFilePath"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getFilePath(normalizedPath: string): string;\n")),(0,n.kt)("p",null,"Returns the file:// path of this file"),(0,n.kt)("h3",{id:"remove"},"remove"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"remove(normalizedPath: string): Promise<void>;\n")),(0,n.kt)("h3",{id:"rename"},"rename"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"rename(normalizedPath: string, normalizedNewPath: string): Promise<void>;\n")),(0,n.kt)("h3",{id:"copy"},"copy"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"copy(normalizedPath: string, normalizedNewPath: string): Promise<void>;\n")),(0,n.kt)("h3",{id:"exists"},"exists"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"exists(normalizedPath: string, sensitive?: boolean): Promise<boolean>;\n")),(0,n.kt)("h3",{id:"stat"},"stat"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"stat(normalizedPath: string): Promise<Stat | null>;\n")),(0,n.kt)("h3",{id:"list"},"list"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"list(normalizedPath: string): Promise<ListedFiles>;\n")),(0,n.kt)("h3",{id:"getfullpath"},"getFullPath"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getFullPath(normalizedPath: string): string;\n")),(0,n.kt)("h3",{id:"readlocalfile"},"readLocalFile"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"static readLocalFile(path: string): Promise<ArrayBuffer>;\n")),(0,n.kt)("h3",{id:"mkdir-1"},"mkdir"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"static mkdir(path: string): Promise<void>;\n")))}m.isMDXComponent=!0}}]);