"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[3970],{8453:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var l=a(7462),n=(a(7294),a(3905));a(1839);const i={},s="FileView",o={unversionedId:"reference/typescript/classes/FileView",id:"reference/typescript/classes/FileView",title:"FileView",description:"Extends ItemView",source:"@site/docs/reference/typescript/classes/FileView.md",sourceDirName:"reference/typescript/classes",slug:"/reference/typescript/classes/FileView",permalink:"/obsidian-plugin-docs/reference/typescript/classes/FileView",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/reference/typescript/classes/FileView.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"FileSystemAdapter",permalink:"/obsidian-plugin-docs/reference/typescript/classes/FileSystemAdapter"},next:{title:"FuzzySuggestModal",permalink:"/obsidian-plugin-docs/reference/typescript/classes/FuzzySuggestModal"}},r={},d=[{value:"Constructor",id:"constructor",level:2},{value:"Properties",id:"properties",level:2},{value:"allowNoFile",id:"allownofile",level:3},{value:"file",id:"file",level:3},{value:"navigation",id:"navigation",level:3},{value:"Methods",id:"methods",level:2},{value:"getDisplayText",id:"getdisplaytext",level:3},{value:"onload",id:"onload",level:3},{value:"getState",id:"getstate",level:3},{value:"setState",id:"setstate",level:3},{value:"onLoadFile",id:"onloadfile",level:3},{value:"onUnloadFile",id:"onunloadfile",level:3},{value:"onRename",id:"onrename",level:3},{value:"canAcceptExtension",id:"canacceptextension",level:3}],c={toc:d};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"fileview"},"FileView"),(0,n.kt)("p",null,"Extends ",(0,n.kt)("inlineCode",{parentName:"p"},"ItemView")),(0,n.kt)("h2",{id:"constructor"},"Constructor"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"constructor(leaf: WorkspaceLeaf);\n")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"allownofile"},"allowNoFile"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"allowNoFile: boolean\n")),(0,n.kt)("h3",{id:"file"},"file"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"file: TFile\n")),(0,n.kt)("h3",{id:"navigation"},"navigation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"navigation: boolean\n")),(0,n.kt)("p",null,"Whether or not the view is intended for navigation.\nIf your view is a static view that is not intended to be navigated away, set this to false.\n(For example: File explorer, calendar, etc.)\nIf your view opens a file or can be otherwise navigated, set this to true.\n(For example: Markdown editor view, Kanban view, PDF view, etc.)\nFile views can be navigated by default."),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"getdisplaytext"},"getDisplayText"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getDisplayText(): string;\n")),(0,n.kt)("h3",{id:"onload"},"onload"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"onload(): void;\n")),(0,n.kt)("p",null,"Override this to load your component"),(0,n.kt)("h3",{id:"getstate"},"getState"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getState(): any;\n")),(0,n.kt)("h3",{id:"setstate"},"setState"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"setState(state: any, result: ViewStateResult): Promise<void>;\n")),(0,n.kt)("h3",{id:"onloadfile"},"onLoadFile"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"onLoadFile(file: TFile): Promise<void>;\n")),(0,n.kt)("h3",{id:"onunloadfile"},"onUnloadFile"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"onUnloadFile(file: TFile): Promise<void>;\n")),(0,n.kt)("h3",{id:"onrename"},"onRename"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"onRename(file: TFile): Promise<void>;\n")),(0,n.kt)("h3",{id:"canacceptextension"},"canAcceptExtension"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"canAcceptExtension(extension: string): boolean;\n")))}p.isMDXComponent=!0}}]);