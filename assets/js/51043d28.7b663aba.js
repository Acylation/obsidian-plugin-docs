"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[1737],{9836:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>m});var s=a(7462),n=(a(7294),a(3905));a(1839);const l={},o="MomentFormatComponent",r={unversionedId:"reference/typescript/classes/MomentFormatComponent",id:"reference/typescript/classes/MomentFormatComponent",title:"MomentFormatComponent",description:"Extends TextComponent",source:"@site/docs/reference/typescript/classes/MomentFormatComponent.md",sourceDirName:"reference/typescript/classes",slug:"/reference/typescript/classes/MomentFormatComponent",permalink:"/obsidian-plugin-docs/reference/typescript/classes/MomentFormatComponent",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/reference/typescript/classes/MomentFormatComponent.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Modal",permalink:"/obsidian-plugin-docs/reference/typescript/classes/Modal"},next:{title:"Notice",permalink:"/obsidian-plugin-docs/reference/typescript/classes/Notice"}},p={},m=[{value:"Constructor",id:"constructor",level:2},{value:"Properties",id:"properties",level:2},{value:"sampleEl",id:"sampleel",level:3},{value:"Methods",id:"methods",level:2},{value:"setDefaultFormat",id:"setdefaultformat",level:3},{value:"setSampleEl",id:"setsampleel",level:3},{value:"setValue",id:"setvalue",level:3},{value:"onChanged",id:"onchanged",level:3},{value:"updateSample",id:"updatesample",level:3}],i={toc:m};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,s.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"momentformatcomponent"},"MomentFormatComponent"),(0,n.kt)("p",null,"Extends ",(0,n.kt)("inlineCode",{parentName:"p"},"TextComponent")),(0,n.kt)("h2",{id:"constructor"},"Constructor"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"constructor(containerEl: HTMLElement);\n")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"sampleel"},"sampleEl"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"sampleEl: HTMLElement\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"setdefaultformat"},"setDefaultFormat"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"setDefaultFormat(defaultFormat: string): this;\n")),(0,n.kt)("p",null,"Sets the default format when input is cleared. Also used for placeholder."),(0,n.kt)("h3",{id:"setsampleel"},"setSampleEl"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"setSampleEl(sampleEl: HTMLElement): this;\n")),(0,n.kt)("h3",{id:"setvalue"},"setValue"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"setValue(value: string): this;\n")),(0,n.kt)("h3",{id:"onchanged"},"onChanged"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"onChanged(): void;\n")),(0,n.kt)("h3",{id:"updatesample"},"updateSample"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"updateSample(): void;\n")))}d.isMDXComponent=!0}}]);