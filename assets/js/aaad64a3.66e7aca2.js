"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[7099],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,v=u["".concat(s,".").concat(m)]||u[m]||p[m]||l;return n?r.createElement(v,a(a({ref:t},c),{},{components:n})):r.createElement(v,a({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var d=2;d<l;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},54037:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var r=n(83117),o=(n(67294),n(3905));const l={},a="Component",i={unversionedId:"reference/typescript/classes/Component",id:"reference/typescript/classes/Component",title:"Component",description:"Constructor",source:"@site/docs/reference/typescript/classes/Component.md",sourceDirName:"reference/typescript/classes",slug:"/reference/typescript/classes/Component",permalink:"/obsidian-plugin-docs/reference/typescript/classes/Component",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/reference/typescript/classes/Component.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"ButtonComponent",permalink:"/obsidian-plugin-docs/reference/typescript/classes/ButtonComponent"},next:{title:"DropdownComponent",permalink:"/obsidian-plugin-docs/reference/typescript/classes/DropdownComponent"}},s={},d=[{value:"Constructor",id:"constructor",level:2},{value:"Methods",id:"methods",level:2},{value:"load",id:"load",level:3},{value:"onload",id:"onload",level:3},{value:"unload",id:"unload",level:3},{value:"onunload",id:"onunload",level:3},{value:"addChild",id:"addchild",level:3},{value:"removeChild",id:"removechild",level:3},{value:"register",id:"register",level:3},{value:"registerEvent",id:"registerevent",level:3},{value:"registerDomEvent",id:"registerdomevent",level:3},{value:"registerDomEvent",id:"registerdomevent-1",level:3},{value:"registerDomEvent",id:"registerdomevent-2",level:3},{value:"registerScopeEvent",id:"registerscopeevent",level:3},{value:"registerInterval",id:"registerinterval",level:3}],c={toc:d};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"component"},"Component"),(0,o.kt)("h2",{id:"constructor"},"Constructor"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"constructor();\n")),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"load"},"load"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"load(): void;\n")),(0,o.kt)("p",null,"Load this component and its children"),(0,o.kt)("h3",{id:"onload"},"onload"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"onload(): void;\n")),(0,o.kt)("p",null,"Override this to load your component"),(0,o.kt)("h3",{id:"unload"},"unload"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"unload(): void;\n")),(0,o.kt)("p",null,"Unload this component and its children"),(0,o.kt)("h3",{id:"onunload"},"onunload"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"onunload(): void;\n")),(0,o.kt)("p",null,"Override this to unload your component"),(0,o.kt)("h3",{id:"addchild"},"addChild"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"addChild<T extends Component>(component: T): T;\n")),(0,o.kt)("p",null,"Adds a child component, loading it if this component is loaded"),(0,o.kt)("h3",{id:"removechild"},"removeChild"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"removeChild<T extends Component>(component: T): T;\n")),(0,o.kt)("p",null,"Removes a child component, unloading it"),(0,o.kt)("h3",{id:"register"},"register"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"register(cb: () => any): void;\n")),(0,o.kt)("p",null,"Registers a callback to be called when unloading"),(0,o.kt)("h3",{id:"registerevent"},"registerEvent"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"registerEvent(eventRef: EventRef): void;\n")),(0,o.kt)("p",null,"Registers an event to be detached when unloading"),(0,o.kt)("h3",{id:"registerdomevent"},"registerDomEvent"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"registerDomEvent<K extends keyof WindowEventMap>(el: Window, type: K, callback: (this: HTMLElement, ev: WindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n")),(0,o.kt)("p",null,"Registers an DOM event to be detached when unloading"),(0,o.kt)("h3",{id:"registerdomevent-1"},"registerDomEvent"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"registerDomEvent<K extends keyof DocumentEventMap>(el: Document, type: K, callback: (this: HTMLElement, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n")),(0,o.kt)("p",null,"Registers an DOM event to be detached when unloading"),(0,o.kt)("h3",{id:"registerdomevent-2"},"registerDomEvent"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"registerDomEvent<K extends keyof HTMLElementEventMap>(el: HTMLElement, type: K, callback: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n")),(0,o.kt)("p",null,"Registers an DOM event to be detached when unloading"),(0,o.kt)("h3",{id:"registerscopeevent"},"registerScopeEvent"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"registerScopeEvent(keyHandler: KeymapEventHandler): void;\n")),(0,o.kt)("p",null,"Registers an key event to be detached when unloading"),(0,o.kt)("h3",{id:"registerinterval"},"registerInterval"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"registerInterval(id: number): number;\n")),(0,o.kt)("p",null,"Registers an interval (from setInterval) to be cancelled when unloading\nUse {@link window.setInterval} instead of {@link setInterval} to avoid TypeScript confusing between NodeJS vs Browser API"))}p.isMDXComponent=!0}}]);