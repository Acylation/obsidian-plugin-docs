"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[1141],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},44606:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(83117),a=(n(67294),n(3905));const i={sidebar_position:60},o="Events",s={unversionedId:"events",id:"events",title:"Events",description:"Many of the interfaces in the Obsidian lets you subscribe to events throughout the application, for example when the user makes changes to a file.",source:"@site/docs/events.md",sourceDirName:".",slug:"/events",permalink:"/obsidian-plugin-docs/events",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/events.md",tags:[],version:"current",sidebarPosition:60,frontMatter:{sidebar_position:60},sidebar:"docs",previous:{title:"Vault",permalink:"/obsidian-plugin-docs/vault"},next:{title:"Submit your plugin",permalink:"/obsidian-plugin-docs/publishing/submit-your-plugin"}},l={},p=[{value:"Timing events",id:"timing-events",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"events"},"Events"),(0,a.kt)("p",null,"Many of the interfaces in the Obsidian lets you subscribe to events throughout the application, for example when the user makes changes to a file."),(0,a.kt)("p",null,"Any registered event handlers need to be detached whenever the plugin unloads. The safest way to make sure this happens is to use the ",(0,a.kt)("a",{parentName:"p",href:"/obsidian-plugin-docs/reference/typescript/classes/Component#registerevent"},(0,a.kt)("inlineCode",{parentName:"a"},"registerEvent()"))," method."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="main.ts"',title:'"main.ts"'},"import { Plugin } from \"obsidian\";\n\nexport default class ExamplePlugin extends Plugin {\n  async onload() {\n    // highlight-start\n    this.registerEvent(this.app.vault.on('create', () => {\n      console.log('a new file has entered the arena')\n    }));\n    // highlight-end\n  }\n}\n")),(0,a.kt)("h2",{id:"timing-events"},"Timing events"),(0,a.kt)("p",null,"If you want to repeatedly call a function with a fixed delay, use the ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/setInterval"},(0,a.kt)("inlineCode",{parentName:"a"},"window.setInterval()"))," function with the ",(0,a.kt)("a",{parentName:"p",href:"/obsidian-plugin-docs/reference/typescript/classes/Component#registerinterval"},(0,a.kt)("inlineCode",{parentName:"a"},"registerInterval()"))," method."),(0,a.kt)("p",null,"The following example displays the current time in the status bar, updated every second:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{11-13}","{11-13}":!0},'import { moment, Plugin } from "obsidian";\n\nexport default class ExamplePlugin extends Plugin {\n  statusBar: HTMLElement;\n\n  async onload() {\n    this.statusBar = this.addStatusBarItem();\n\n    this.updateStatusBar();\n\n    // highlight-start\n    this.registerInterval(\n      window.setInterval(() => this.updateStatusBar(), 1000)\n    );\n    // highlight-end\n  }\n\n  updateStatusBar() {\n    this.statusBar.setText(moment().format("H:mm:ss"));\n  }\n}\n')),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://momentjs.com/"},"Moment")," is a popular JavaScript library for working with dates and time. Obsidian uses Moment internally, so you don't need to install it yourself. You can import it from the Obsidian API instead:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { moment } from "obsidian";\n'))))}c.isMDXComponent=!0}}]);