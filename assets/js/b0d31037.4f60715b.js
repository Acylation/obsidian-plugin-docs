"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[1146],{3699:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>p});var n=a(7462),l=(a(7294),a(3905));a(1839);const s={},i="View",r={unversionedId:"reference/typescript/classes/View",id:"reference/typescript/classes/View",title:"View",description:"Extends Component",source:"@site/docs/reference/typescript/classes/View.md",sourceDirName:"reference/typescript/classes",slug:"/reference/typescript/classes/View",permalink:"/obsidian-plugin-docs/reference/typescript/classes/View",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/reference/typescript/classes/View.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Vault",permalink:"/obsidian-plugin-docs/reference/typescript/classes/Vault"},next:{title:"Workspace",permalink:"/obsidian-plugin-docs/reference/typescript/classes/Workspace"}},o={},p=[{value:"Constructor",id:"constructor",level:2},{value:"Properties",id:"properties",level:2},{value:"app",id:"app",level:3},{value:"icon",id:"icon",level:3},{value:"navigation",id:"navigation",level:3},{value:"leaf",id:"leaf",level:3},{value:"containerEl",id:"containerel",level:3},{value:"Methods",id:"methods",level:2},{value:"onOpen",id:"onopen",level:3},{value:"onClose",id:"onclose",level:3},{value:"getViewType",id:"getviewtype",level:3},{value:"getState",id:"getstate",level:3},{value:"setState",id:"setstate",level:3},{value:"getEphemeralState",id:"getephemeralstate",level:3},{value:"setEphemeralState",id:"setephemeralstate",level:3},{value:"getIcon",id:"geticon",level:3},{value:"onResize",id:"onresize",level:3},{value:"getDisplayText",id:"getdisplaytext",level:3},{value:"onPaneMenu",id:"onpanemenu",level:3}],c={toc:p};function d(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"view"},"View"),(0,l.kt)("p",null,"Extends ",(0,l.kt)("inlineCode",{parentName:"p"},"Component")),(0,l.kt)("h2",{id:"constructor"},"Constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"constructor(leaf: WorkspaceLeaf);\n")),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"app"},"app"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"app: App\n")),(0,l.kt)("h3",{id:"icon"},"icon"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"icon: string\n")),(0,l.kt)("h3",{id:"navigation"},"navigation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"navigation: boolean\n")),(0,l.kt)("p",null,"Whether or not the view is intended for navigation.\nIf your view is a static view that is not intended to be navigated away, set this to false.\n(For example: File explorer, calendar, etc.)\nIf your view opens a file or can be otherwise navigated, set this to true.\n(For example: Markdown editor view, Kanban view, PDF view, etc.)"),(0,l.kt)("h3",{id:"leaf"},"leaf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"leaf: WorkspaceLeaf\n")),(0,l.kt)("h3",{id:"containerel"},"containerEl"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"containerEl: HTMLElement\n")),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"onopen"},"onOpen"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"protected onOpen(): Promise<void>;\n")),(0,l.kt)("h3",{id:"onclose"},"onClose"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"protected onClose(): Promise<void>;\n")),(0,l.kt)("h3",{id:"getviewtype"},"getViewType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"abstract getViewType(): string;\n")),(0,l.kt)("h3",{id:"getstate"},"getState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"getState(): any;\n")),(0,l.kt)("h3",{id:"setstate"},"setState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"setState(state: any, result: ViewStateResult): Promise<void>;\n")),(0,l.kt)("h3",{id:"getephemeralstate"},"getEphemeralState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"getEphemeralState(): any;\n")),(0,l.kt)("h3",{id:"setephemeralstate"},"setEphemeralState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"setEphemeralState(state: any): void;\n")),(0,l.kt)("h3",{id:"geticon"},"getIcon"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"getIcon(): IconName;\n")),(0,l.kt)("h3",{id:"onresize"},"onResize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"onResize(): void;\n")),(0,l.kt)("p",null,"Called when the size of this view is changed."),(0,l.kt)("h3",{id:"getdisplaytext"},"getDisplayText"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"abstract getDisplayText(): string;\n")),(0,l.kt)("h3",{id:"onpanemenu"},"onPaneMenu"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"onPaneMenu(menu: Menu, source: 'more-options' | 'tab-header' | string): void;\n")),(0,l.kt)("p",null,"Populates the pane menu."),(0,l.kt)("p",null,"(Replaces the previously removed ",(0,l.kt)("inlineCode",{parentName:"p"},"onHeaderMenu")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"onMoreOptionsMenu"),")"))}d.isMDXComponent=!0}}]);