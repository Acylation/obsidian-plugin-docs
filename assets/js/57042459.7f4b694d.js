"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[4905],{9872:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=r(7462),n=(r(7294),r(3905));r(1839);const a={},o="loadMermaid",s={unversionedId:"reference/typescript/functions/loadMermaid",id:"reference/typescript/functions/loadMermaid",title:"loadMermaid",description:"Load Mermaid and return a promise to the global mermaid object.",source:"@site/docs/reference/typescript/functions/loadMermaid.md",sourceDirName:"reference/typescript/functions",slug:"/reference/typescript/functions/loadMermaid",permalink:"/obsidian-plugin-docs/reference/typescript/functions/loadMermaid",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/reference/typescript/functions/loadMermaid.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"loadMathJax",permalink:"/obsidian-plugin-docs/reference/typescript/functions/loadMathJax"},next:{title:"loadPdfJs",permalink:"/obsidian-plugin-docs/reference/typescript/functions/loadPdfJs"}},d={},c=[],p={toc:c};function l(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,i.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"loadmermaid"},"loadMermaid"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"export function loadMermaid(): Promise<any>;\n")),(0,n.kt)("p",null,"Load Mermaid and return a promise to the global mermaid object.\nCan also use ",(0,n.kt)("inlineCode",{parentName:"p"},"mermaid")," after this promise resolves to get the same reference."))}l.isMDXComponent=!0}}]);