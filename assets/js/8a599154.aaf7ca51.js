"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[9165],{8836:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>p,metadata:()=>a,toc:()=>c});var r=n(7462),s=(n(7294),n(3905));n(1839);const p={},i="KeymapEventListener",a={unversionedId:"reference/typescript/types/KeymapEventListener",id:"reference/typescript/types/KeymapEventListener",title:"KeymapEventListener",description:"Return false to automatically preventDefault",source:"@site/docs/reference/typescript/types/KeymapEventListener.md",sourceDirName:"reference/typescript/types",slug:"/reference/typescript/types/KeymapEventListener",permalink:"/obsidian-plugin-docs/reference/typescript/types/KeymapEventListener",draft:!1,editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/reference/typescript/types/KeymapEventListener.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"IconName",permalink:"/obsidian-plugin-docs/reference/typescript/types/IconName"},next:{title:"MarkdownViewModeType",permalink:"/obsidian-plugin-docs/reference/typescript/types/MarkdownViewModeType"}},o={},c=[],y={toc:c};function d(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"keymapeventlistener"},"KeymapEventListener"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type KeymapEventListener = (evt: KeyboardEvent, ctx: KeymapContext) => false | any;\n")),(0,s.kt)("p",null,"Return ",(0,s.kt)("inlineCode",{parentName:"p"},"false")," to automatically preventDefault"))}d.isMDXComponent=!0}}]);